# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

[tool.black]
line-length = 100
target-version = ['py36']
include = '(\.pyi?$)'
exclude = '''

(
  /(
      \.github
    | \.tvm
    | \.tvm_test_data
    | \.vscode
    | \.venv
    | 3rdparty
    | build\/
    | cmake\/
    | conda\/
    | docker\/
    | docs\/
    | golang\/
    | include\/
    | jvm\/
    | licenses\/
    | nnvm\/
    | rust\/
    | src\/
    | vta\/
    | web\/
  )/
)
'''

[tool.poetry]
name = "apache-tvm"
authors = []
version = "0.8.0"
description = "Open source Deep Learning compliation toolkit"

[[tool.poetry.source]]
name = "custom-pypi"
url = "https://pypi.org/simple/"
default = true

[[tool.poetry.source]]
name = "oneflow"
url = "https://release.oneflow.info"
secondary = true

[[tool.poetry.source]]
name = "torch"
url = "http://download.pytorch.org/whl/cpu"
secondary = true

[[tool.poetry.source]]
name = "torch-arm"
url = "https://torch.kmtea.eu/whl/stable.html"
secondary = true

[[tool.poetry.source]]
name = "tensorflow-aarch64"
url = "https://snapshots.linaro.org/ldcg/python/tensorflow-manylinux/43/tensorflow-aarch64"
secondary = true
[tool.poetry.dependencies]
python = ">=3.7, <3.9"
attrs = { version = "==*", optional = false, source = "custom-pypi" }
cloudpickle = { version = "==*", optional = false, source = "custom-pypi" }
coremltools = { version = "==*", optional = true, source = "custom-pypi" }
decorator = { version = "==*", optional = false, source = "custom-pypi" }
ethos-u-vela = { version = "==3.2.0", optional = true, source = "custom-pypi" }
flowvision = { version = "==0.1.0", optional = true, source = "custom-pypi" }
future = { version = "==*", optional = true, source = "custom-pypi" }
keras = { version = "==2.7", optional = true, source = "custom-pypi" }
mxnet = { version = "==1.6.0", optional = true, source = "custom-pypi" }
numpy = { version = "==1.19.3", optional = false, source = "custom-pypi" }
oneflow = { version = "==0.7.0", optional = true, source = "custom-pypi" }
onnx = { version = "==1.10.2", optional = true, source = "custom-pypi" }
onnxruntime = { version = "==1.9.0", optional = true, source = "custom-pypi" }
opencv-python = { version = "==*", optional = true, source = "custom-pypi" }
paddlepaddle = { version = "==2.1.3", optional = true, markers = "'importer-tensorflow' not in extra and 'importer-tflite' not in extra", source = "custom-pypi" }
protobuf = { version = "<4", optional = true, source = "custom-pypi" }
psutil = { version = "==*", optional = false, source = "custom-pypi" }
scikit-image = { version = "==*", optional = true, source = "custom-pypi" }
scipy = { version = "==1.7.3", optional = false, source = "custom-pypi" }
six = { version = "==*", optional = true, source = "custom-pypi" }
synr = { version = "==0.6.0", optional = false, source = "custom-pypi" }
tensorflow = { version = "==2.7.2", optional = true, markers = "platform_machine not in 'aarch64' and 'gpu' not in extra and 'importer-paddle' not in extra", source = "custom-pypi" }
tensorflow-aarch64 = { version = "==2.7.2", optional = true, markers = "platform_machine in 'aarch64' and 'importer-paddle' not in extra", source = "custom-pypi" }
tensorflow-gpu = { version = "==2.7.2", optional = true, markers = "platform_machine not in 'aarch64' and 'gpu' in extra and 'importer-paddle' not in extra", source = "custom-pypi" }
tensorflow-estimator = { version = "==2.7.0", optional = true, source = "custom-pypi" }
tflite = { version = "==2.4.0", optional = true, source = "custom-pypi" }
torch = { version = "==1.11.0", optional = true, source = "torch" }
torchvision = { version = "==0.12.0+cpu", optional = true, source = "torch" }
tornado = { version = "==*", optional = false, source = "custom-pypi" }
xgboost = { version = ">=1.1.0", optional = true, source = "custom-pypi" }

[tool.poetry.dev-dependencies]
astroid = { version = "==*", source = "custom-pypi" }
autodocsumm = { version = "==*", source = "custom-pypi" }
black = { version = "==22.3.0", source = "custom-pypi" }
blocklint = { version = "==0.2.3", source = "custom-pypi" }
click = { version = "==*", source = "custom-pypi" }
commonmark = { version = ">=0.7.3", source = "custom-pypi" }
cpplint = { version = "==1.6.0", source = "custom-pypi" }
docutils = { version = ">=0.11", source = "custom-pypi" }
flake8 = { version = "==3.9.2", source = "custom-pypi" }
image = { version = "==*", source = "custom-pypi" }
jinja2 = { version = "==3.0.3", source = "custom-pypi" }
matplotlib = { version = "==*", source = "custom-pypi" }
mypy = { version = "==0.902", source = "custom-pypi" }
pillow = { version = "==9.1.0", source = "custom-pypi" }
pylint = { version = "==2.4.4", source = "custom-pypi" }
sphinx = { version = "==4.2.0", source = "custom-pypi" }
sphinx-autodoc-annotation = { version = "==*", source = "custom-pypi" }
sphinx-gallery = { version = "==0.4.0", source = "custom-pypi" }
sphinx-rtd-theme = { version = "==*", source = "custom-pypi" }

[tool.poetry.extras]
# Requirements for using Arm(R) Ethos(TM)-U NPU
ethosu = ["ethos-u-vela"]

# Requirements for working with GPUs
gpu = []

# Requirements for the Caffe importer
importer-caffe = ["numpy", "protobuf", "scikit-image", "six"]

# Requirements for the Caffe2 importer
importer-caffe2 = []

# Requirements for the CoreML importer
importer-coreml = ["coremltools"]

# Requirements for the DarkNet importer
importer-darknet = ["opencv-python"]

# Requirements for the Keras importer
importer-keras = ["keras", "tensorflow", "tensorflow-estimator"]

# Requirements for the OneFlow importer
importer-oneflow = ["flowvision", "oneflow"]

# Requirements for the ONNX importer
importer-onnx = ["onnx", "onnxruntime"]

# Requirements for the mxnet importer
importer-mxnet = ["mxnet"]

# Requirements for the PaddlePaddle importer
importer-paddle = ["paddlepaddle"]

# Requirements for the PyTorch importer
importer-pytorch = ["future", "torch", "torchvision"]

# Requirements for the TensorFlow importer
importer-tensorflow = ["tensorflow", "tensorflow-estimator"]

# Requirements for the TFLite importer
importer-tflite = ["tensorflow", "tensorflow-estimator", "tflite"]

# Requirements for the tvmc command-line tool
tvmc = ["ethos-u-vela", "onnx", "onnxruntime", "tensorflow", "tflite", "xgboost"]

# Requirements for XGBoost autotuning
xgboost = ["future", "xgboost"]


